MPASM 03.00 Released            LAB62.ASM   3-19-2003  9:41:56         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; **********************************************************
                      00002 ; * Name : Simon Brennan                                   *
                      00003 ; * Student Number : 2021282                               *
                      00004 ; * Date : 21/03/2003                                      *
                      00005 ; * Assignment No : LAB5.asm                               *
                      00006 ; * Description : This program is a 8 bit binary counter   *
                      00007 ; *               that counts in 8421 code, through portd  *
                      00008 ; *               using a half a second interval loop      *
                      00009 ; *               The counter will only count up when      *
                      00010 ; *               the switch on PortA bit 4 is pressed     *
                      00011 ; *               and count down when switch on PortA      *    
                      00012 ; *               bit 5 is pressed                         *    
                      00013 ; *                                                        *
                      00014 ; * Inputs : Address 03h -> Status                         *
                      00015 ; *          Address 88h -> TrisD                          *
                      00016 ; *          Address 85h -> TrisA                          *
                      00017 ; *          Address 20h -> Loop1                          *    
                      00018 ; *          Address 21h -> Loop2                          *
                      00019 ; *          Address 22h -> Loop3                          *            
                      00020 ; *          Address 05h -> PortA                          *
                      00021 ; * Outputs: Address 03h -> PortD                          *
                      00022 ; *                                                        *
                      00023 ; * Version: 1.0 - Works perfectly                         *
                      00024 ; **********************************************************
                      00025 
                      00026         list p=16F877
  00000002            00027 PCL             EQU     02h     ; Address of program counter
  00000001            00028 F               EQU     1h      ;
  00000003            00029 Status          EQU     03h     ; Address of status register
  00000085            00030 TrisA           EQU     85h     ; Address of Tristate Buffer A.
  00000088            00031 TrisD           EQU     88h     ; Address of Tristate Buffer D.
  00000020            00032 Loop1           EQU     20h     ; Count variable for the first loop
  00000021            00033 Loop2           EQU     21h     ; Count variable for the second loop
  00000022            00034 Loop3           EQU     22h     ; Count variable for the first loop
  00000023            00035 Counter         EQU     23h     ; Stores the status of counter
  00000005            00036 PortA           EQU     05h     ; Address of Port A.
  00000008            00037 PortD           EQU     08h     ; Address of Port D.
  0000009F            00038 Adcon1          EQU     9Fh     ; Address of Adcon1.
                      00039 
0000                  00040         ORG 0000h
                      00041 
0000                  00042 START
0000   1683           00043         BSF     Status,5        ; Change to Memory Bank 1
0001   30FF           00044         MOVLW   0FFh            ; Used to make PortA Digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   009F           00045         MOVWF   Adcon1          ; Set all bits on PortA to Digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0188           00046         CLRF    TrisD           ; Set all bits on PortD to outputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   0185           00047         CLRF    TrisA           ; Set all bits on PortA to outputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   1605           00048         BSF     TrisA,4         ; Set Bit 3 on PortA to input
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 03.00 Released            LAB62.ASM   3-19-2003  9:41:56         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   1685           00049         BSF     TrisA,5         ; Set Bit 4 on PortA to input
0007   1283           00050         BCF     Status,5        ; Move to Memory Bank 0
0008   0188           00051         CLRF    PortD           ; Switch off all LED's
0009   01A3           00052         CLRF    Counter         ; Set counter to zero
000A   01A0           00053         CLRF    Loop1           ; Reset value in Loop 1
000B   01A1           00054         CLRF    Loop2           ; Reset value in Loop 2
000C   01A2           00055         CLRF    Loop3           ; Reset value in Loop 3
000D                  00056 SWITCH
000D   1E05           00057         BTFSS   PortA,4         ; Check if switch has been pressed
000E   2013           00058         CALL    CUP             ; Go and count up by one
000F   1E85           00059         BTFSS   PortA,5         ; Check if switch has been pressed
0010   201B           00060         CALL    CDOWN           ; Go and count down by one 
0011   2037           00061         CALL    DELAY           ; Make a delay for 0.1s
0012   280D           00062         GOTO    SWITCH          ; Go and check switch again
0013                  00063 CUP
0013   1A85           00064         BTFSC   PortA,5         ; Go and check if other (RA5) has been pressed
Message[305]: Using default destination of 1 (file).
0014   0AA3           00065         INCF    Counter         ; Go and count one up
0015   0805           00066         MOVF    PortA,0         ; Check to see if both switches have been pressed
0016   1903           00067         BTFSC   Status,2        ; If both switches have been pressed Go to error state else carry on
0017   2023           00068         CALL    ERR             ; Go into the error state
0018   202B           00069         CALL    SEVENSEG        ; Update display
0019   0088           00070         MOVWF   PortD           ; //
001A   0008           00071         RETURN                  ;
001B                  00072 CDOWN
001B   1A05           00073         BTFSC   PortA,4         ; Go and check if other (RA4) has been pressed
Message[305]: Using default destination of 1 (file).
001C   03A3           00074         DECF    Counter         ; Go and count one down
001D   0805           00075         MOVF    PortA,0         ; Check to see if both switches have been pressed
001E   1903           00076         BTFSC   Status,2        ; If both switches have been pressed Go to error state else carry on
001F   2023           00077         CALL    ERR             ; Go into the error state
0020   202B           00078         CALL    SEVENSEG        ; Update Display
0021   0088           00079         MOVWF   PortD           ; //
0022   0008           00080         RETURN                  ;
0023                  00081 ERR
0023   0188           00082         CLRF    PortD           ; Clear Display
0024   2037           00083         CALL    DELAY           ;
0025   1788           00084         BSF     PortD,7         ; Switch on decimal to show error
0026   2037           00085         CALL    DELAY           ;
0027   0805           00086         MOVF    PortA,0         ; Check switch status again
0028   1D03           00087         BTFSS   Status,2        ; Check if switches are being pressed
0029   0008           00088         RETURN                  ; 
002A   2823           00089         GOTO    ERR             ; Loop again until only one switch is being pressed
                      00090 
002B                  00091 SEVENSEG
002B   0823           00092         MOVF    Counter,0       ; //
002C   0782           00093         ADDWF   PCL,F           ; Set the value on seven segment display to counter
002D   343F           00094         RETLW   B'00111111'     ;Decode 0
002E   3406           00095         RETLW   B'00000110'     ;Decode 1
002F   345B           00096         RETLW   B'01011011'     ;Decode 2
0030   344F           00097         RETLW   B'01001111'     ;Decode 3
0031   3466           00098         RETLW   B'01100110'     ;Decode 4
0032   346D           00099         RETLW   B'01101101'     ;Decode 5
MPASM 03.00 Released            LAB62.ASM   3-19-2003  9:41:56         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   347D           00100         RETLW   B'01111101'     ;Decode 6
0034   3407           00101         RETLW   B'00000111'     ;Decode 7
0035   347F           00102         RETLW   B'01111111'     ;Decode 8
0036   346F           00103         RETLW   B'01101111'     ;Decode 9
                      00104 
0037                  00105 DELAY
                      00106         ;RETURN                 ;Used for simulation purposes
0037   3003           00107         MOVLW   03h             ;Set delay for 0.5 Second
0038   00A2           00108         MOVWF   Loop3           ;Set Loop3 to Loop 3 Times
0039                  00109 LOOP    
0039   0BA0           00110         DECFSZ  Loop1,1         ;Loop 255 times then move to next loop
003A   2839           00111         Goto    LOOP            ;Go Back to the beginning of the Loop
003B   0BA1           00112         DECFSZ  Loop2,1         ;Loop 255 times then move to next loop
003C   2839           00113         Goto    LOOP            ;Go Back to the beginning of the Loop   
003D   0BA2           00114         DECFSZ  Loop3,1         ;Loop 5 times then move to next loop
003E   2839           00115         Goto    LOOP            ;Go Back to the beginning of the Loop
003F   0008           00116         RETURN                  ;Go back and execute instruction after last call
                      00117         end                     ;End of Source
MPASM 03.00 Released            LAB62.ASM   3-19-2003  9:41:56         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

Adcon1                            0000009F
CDOWN                             0000001B
CUP                               00000013
Counter                           00000023
DELAY                             00000037
ERR                               00000023
F                                 00000001
LOOP                              00000039
Loop1                             00000020
Loop2                             00000021
Loop3                             00000022
PCL                               00000002
PortA                             00000005
PortD                             00000008
SEVENSEG                          0000002B
START                             00000000
SWITCH                            0000000D
Status                            00000003
TrisA                             00000085
TrisD                             00000088
__16F877                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX

All other memory blocks unused.

Program Memory Words Used:    64
Program Memory Words Free:  8128


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     7 reported,     0 suppressed

