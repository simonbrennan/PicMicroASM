MPASM 03.00 Released            HELLO.ASM   5-5-2003  16:57:30         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; **********************************************************
                      00002 ; * Name : Simon Brennan                                   *
                      00003 ; * Student Number : 2021282                               *
                      00004 ; * Date : 30/03/2003                                      *
                      00005 ; * Assignment No : LAB6.asm                               *
                      00006 ; * Description : This program is a 8 bit binary counter   *
                      00007 ; *               that counts in 8421 code, through portd  *
                      00008 ; *               on a seven segment display               *              
                      00009 ; *               using a half a second interval loop      *
                      00010 ; *               The counter will count up when           *
                      00011 ; *               the switch on PortA bit 4 is pressed,    *
                      00012 ; *               count down when switch on PortA          *    
                      00013 ; *               bit 5 is pressed, and give an error      *    
                      00014 ; *               message when both switches are pressed.  *
                      00015 ; *                                                        *
                      00016 ; * Inputs : Address 03h -> Status                         *
                      00017 ; *          Address 02h -> PCL                            *
                      00018 ; *          Address 1h  -> F                              *            
                      00019 ; *          Address 9fh -> Adcon1                         *    
                      00020 ; *          Address 88h -> TrisD                          *
                      00021 ; *          Address 85h -> TrisA                          *
                      00022 ; *          Address 20h -> Loop1                          *    
                      00023 ; *          Address 21h -> Loop2                          *
                      00024 ; *          Address 22h -> Loop3                          *            
                      00025 ; *          Address 23h -> Counter                        *            
                      00026 ; *          Address 05h -> PortA                          *
                      00027 ; * Outputs: Address 03h -> PortD                          *
                      00028 ; *                                                        *
                      00029 ; * Version: 1.0 - Works perfectly                         *
                      00030 ; *          1.1 - Added Seven segment display             *
                      00031 ; *          1.2 - Made it count 0-9, 9-0                  *
                      00032 ; *          1.3 - Simplified FF and 10 check              *            
                      00033 ; **********************************************************
                      00034 
                      00035         list p=16F877
  00000002            00036 PCL             EQU     02h     ; Address of program counter
  00000001            00037 F               EQU     1h      ; 
  00000003            00038 Status          EQU     03h     ; Address of status register
  00000085            00039 TrisA           EQU     85h     ; Address of Tristate Buffer A.
  00000088            00040 TrisD           EQU     88h     ; Address of Tristate Buffer D.
  00000020            00041 Loop1           EQU     20h     ; Count variable for the first loop
  00000021            00042 Loop2           EQU     21h     ; Count variable for the second loop
  00000022            00043 Loop3           EQU     22h     ; Count variable for the first loop
  00000023            00044 Counter         EQU     23h     ; Stores the status of counter
  00000005            00045 PortA           EQU     05h     ; Address of Port A.
  00000008            00046 PortD           EQU     08h     ; Address of Port D.
  0000009F            00047 Adcon1          EQU     9Fh     ; Address of Adcon1.
                      00048 
                      00049 
0000                  00050         ORG 0000h
                      00051 
0000                  00052 START
0000   1683           00053         BSF     Status,5        ; Change to Memory Bank 1
MPASM 03.00 Released            HELLO.ASM   5-5-2003  16:57:30         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   30FF           00054         MOVLW   0FFh            ; Used to make PortA Digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   009F           00055         MOVWF   Adcon1          ; Set all bits on PortA to Digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0188           00056         CLRF    TrisD           ; Set all bits on PortD to outputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   0185           00057         CLRF    TrisA           ; Set all bits on PortA to outputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   1605           00058         BSF     TrisA,4         ; Set Bit 4 on PortA to input
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   1685           00059         BSF     TrisA,5         ; Set Bit 5 on PortA to input
0007   1283           00060         BCF     Status,5        ; Move to Memory Bank 0
0008   0188           00061         CLRF    PortD           ; Switch off all LED's
0009   01A3           00062         CLRF    Counter         ; Set counter to zero
000A                  00063 SWITCH
000A   1E05           00064         BTFSS   PortA,4         ; Check if up switch has been pressed
000B   2021           00065         CALL    CUP             ; Go and count up by one
000C   1E85           00066         BTFSS   PortA,5         ; Check if down switch has been pressed
000D   2024           00067         CALL    CDOWN           ; Go and count down by one 
000E   0823           00068         MOVF    Counter,0       ; //
000F   3C05           00069         SUBLW   B'00000101'     ; Check to see if count is at 5
0010   1903           00070         BTFSC   Status,2        ; //
0011   01A3           00071         CLRF    Counter         ; If counter is at 5 then reset the counter back to zero        
0012   0823           00072         MOVF    Counter,0               ;
0013   3CFF           00073         SUBLW   B'11111111'     ; Check to see if counter is at FF
0014   1903           00074         BTFSC   Status,2        ; //
0015   201E           00075         CALL    Count5          ; If counter os at FF then reset the counter to 5       
0016   2031           00076         CALL    SEVENSEG        ; Set the value on the seven segment display
0017   0088           00077         MOVWF   PortD           ; //
0018   0805           00078         MOVF    PortA,0         ; Check to see if both switches have been pressed
0019   3930           00079         ANDLW   b'00110000'     ; Make sure all other bits are 0
001A   1903           00080         BTFSC   Status,2        ; If both switches have been pressed Go to error state else carry on
001B   2027           00081         CALL    ERR             ; Go into the error state
001C   203D           00082         CALL    DELAY           ; Delay of 0.1s
001D   280A           00083         GOTO    SWITCH          ; Go and check the switches again
001E                  00084 Count5
001E   3004           00085         MOVLW   04h             ; Set the counter to 4
001F   00A3           00086         MOVWF   Counter         ; //
0020   0008           00087         RETURN                  ;
0021                  00088 CUP
0021   1A85           00089         BTFSC   PortA,5         ; Go and check if other switch (RA5) has been pressed
Message[305]: Using default destination of 1 (file).
0022   0AA3           00090         INCF    Counter         ; Go and count one up
0023   0008           00091         RETURN                  ;
0024                  00092 CDOWN
0024   1A05           00093         BTFSC   PortA,4         ; Go and check if other switch (RA4) has been pressed
Message[305]: Using default destination of 1 (file).
0025   03A3           00094         DECF    Counter         ; Go and count one down
0026   0008           00095         RETURN                  ;
0027                  00096 ERR
0027   0188           00097         CLRF    PortD           ; Clear seven segment Display
0028   203D           00098         CALL    DELAY           ; half second delay
0029   30F9           00099         MOVLW   B'11111001'     ; Seven segment code to put an e on display     
MPASM 03.00 Released            HELLO.ASM   5-5-2003  16:57:30         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   0088           00100         MOVWF   PortD           ; Show an "e" on display, for error
002B   203D           00101         CALL    DELAY           ; half second delay
002C   0805           00102         MOVF    PortA,0         ; Check to see if both switches have been pressed
002D   3930           00103         ANDLW   b'00110000'     ; Make All the other bits O
002E   1D03           00104         BTFSS   Status,2        ; If both switches have been pressed Go to error state else carry on
002F   0008           00105         RETURN                  ; 
0030   2827           00106         GOTO    ERR             ; Loop again until only one switch is being pressed
                      00107 
0031                  00108 SEVENSEG
0031   0823           00109         MOVF    Counter,0       ; //
0032   0782           00110         ADDWF   PCL,F           ; Set the value on seven segment display to counter
0033   3476           00111         RETLW   B'01110110'     ;Decode 0
0034   3479           00112         RETLW   B'01111001'     ;Decode 1
0035   3438           00113         RETLW   B'00111000'     ;Decode 2
0036   3438           00114         RETLW   B'00111000'     ;Decode 3
0037   343F           00115         RETLW   B'00111111'     ;Decode 4
0038   346D           00116         RETLW   B'01101101'     ;Decode 5
0039   347D           00117         RETLW   B'01111101'     ;Decode 6
003A   3407           00118         RETLW   B'00000111'     ;Decode 7
003B   347F           00119         RETLW   B'01111111'     ;Decode 8
003C   346F           00120         RETLW   B'01101111'     ;Decode 9
                      00121 
003D                  00122 DELAY
                      00123         ;RETURN                 ;Used for simulation purposes
003D   3002           00124         MOVLW   02h             ;Set delay for 0.5 Second
003E   00A2           00125         MOVWF   Loop3           ;Set Loop3 to Loop 3 Times
003F                  00126 LOOP    
003F   0BA0           00127         DECFSZ  Loop1,1         ;Loop 255 times then move to next loop
0040   283F           00128         Goto    LOOP            ;Go Back to the beginning of the Loop
0041   0BA1           00129         DECFSZ  Loop2,1         ;Loop 255 times then move to next loop
0042   283F           00130         Goto    LOOP            ;Go Back to the beginning of the Loop   
0043   0BA2           00131         DECFSZ  Loop3,1         ;Loop 5 times then move to next loop
0044   283F           00132         Goto    LOOP            ;Go Back to the beginning of the Loop
0045   0008           00133         RETURN                  ;Go back and execute instruction after last call
                      00134         end                     ;End of Source
MPASM 03.00 Released            HELLO.ASM   5-5-2003  16:57:30         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

Adcon1                            0000009F
CDOWN                             00000024
CUP                               00000021
Count5                            0000001E
Counter                           00000023
DELAY                             0000003D
ERR                               00000027
F                                 00000001
LOOP                              0000003F
Loop1                             00000020
Loop2                             00000021
Loop3                             00000022
PCL                               00000002
PortA                             00000005
PortD                             00000008
SEVENSEG                          00000031
START                             00000000
SWITCH                            0000000A
Status                            00000003
TrisA                             00000085
TrisD                             00000088
__16F877                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXX---------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    70
Program Memory Words Free:  8122


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     7 reported,     0 suppressed

